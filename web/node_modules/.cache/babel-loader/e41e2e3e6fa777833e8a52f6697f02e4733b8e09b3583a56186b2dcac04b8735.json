{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golov\\\\coding\\\\frelance\\\\test-app-kursach\\\\freelance-test-app-4\\\\web\\\\src\\\\components\\\\cabinet\\\\CabinetRaiting.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getUserTest } from \"../../services/TestApi\";\nimport styles from \"../../styles/RaitingCard.module.css\";\nimport { getUserById } from \"../../services/userApi\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CabinetRaiting = () => {\n  _s();\n  const [raitingData, setRaitingData] = useState();\n  const [users] = useState([]);\n  useEffect(() => {\n    getUserTest().then(data => setRaitingData(data));\n  }, [raitingData]);\n  raitingData.map(element => getUserById(element.UserId).then(data => users.push(data)));\n  if (!raitingData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(users);\n\n  // Як знайти рейтинг: Береш проходиш по юзерам, береш тести які вони проходили, береш у теста питання (всього питань кількість ділиш на кількість превельних питань)\n  // Так сумуєш ці значення по кожному тесту, а потім ділиш це значення на кількість тестів, і чім більше число тим успішніше учень\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u0443\\u0447\\u043D\\u0456\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.statList,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.statBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u0422\\u043E\\u043F \\u043F\\u043E \\u043E\\u0446\\u0456\\u043D\\u043A\\u0430\\u043C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.smallList,\n          children: raitingData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"1. \\u043A\\u0442\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.statBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0437\\u0434\\u0430\\u043D\\u0438\\u0445 \\u0442\\u0435\\u0441\\u0442\\u0456\\u0432\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.smallList,\n          children: raitingData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"1. \\u043A\\u0442\\u043E\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CabinetRaiting, \"qGXnHUnsC4FQoQEXb0yX9zct37o=\");\n_c = CabinetRaiting;\nvar _c;\n$RefreshReg$(_c, \"CabinetRaiting\");","map":{"version":3,"names":["React","useEffect","useState","getUserTest","styles","getUserById","jsxDEV","_jsxDEV","Fragment","_Fragment","CabinetRaiting","_s","raitingData","setRaitingData","users","then","data","map","element","UserId","push","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","statList","statBox","smallList","_c","$RefreshReg$"],"sources":["C:/Users/golov/coding/frelance/test-app-kursach/freelance-test-app-4/web/src/components/cabinet/CabinetRaiting.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getUserTest } from \"../../services/TestApi\";\r\nimport styles from \"../../styles/RaitingCard.module.css\";\r\nimport { getUserById } from \"../../services/userApi\";\r\nexport const CabinetRaiting = () => {\r\n  const [raitingData, setRaitingData] = useState();\r\n  const [users] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUserTest().then((data) => setRaitingData(data));\r\n  }, [raitingData]);\r\n\r\n  raitingData.map((element) =>\r\n    getUserById(element.UserId).then((data) => users.push(data))\r\n  );\r\n\r\n  if (!raitingData) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  console.log(users);\r\n\r\n  // Як знайти рейтинг: Береш проходиш по юзерам, береш тести які вони проходили, береш у теста питання (всього питань кількість ділиш на кількість превельних питань)\r\n  // Так сумуєш ці значення по кожному тесту, а потім ділиш це значення на кількість тестів, і чім більше число тим успішніше учень\r\n\r\n  return (\r\n    <>\r\n      <h2>Рейтинг учнів</h2>\r\n      <ul className={styles.statList}>\r\n        <li className={styles.statBox}>\r\n          <h3>Топ по оцінкам</h3>\r\n          <ul className={styles.smallList}>\r\n            {raitingData.map((data) => (\r\n              <li>1. ктото</li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n        <li className={styles.statBox}>\r\n          <h3>Кількість зданих тестів</h3>\r\n          <ul className={styles.smallList}>\r\n            {raitingData.map((data) => (\r\n              <li>1. ктото</li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}