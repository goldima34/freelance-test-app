{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golov\\\\coding\\\\frelance\\\\test-app-kursach\\\\freelance-test-app-4\\\\web\\\\src\\\\components\\\\TestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getAnswerByQuestionId } from \"../services/TestApi\";\nimport style from \"../styles/TestForm.module.css\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestForm = ({\n  question\n}) => {\n  _s();\n  const [answers, setAnswers] = useState();\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  useEffect(() => {\n    getAnswerByQuestionId(question.id).then(data => setAnswers(data));\n  }, [question.id]);\n  const handleAnswerSelect = answer => {\n    if (!selectedAnswer) {\n      // Only update if no answer is selected yet\n      setSelectedAnswer(answer.id);\n      const currentCorrectAnswers = parseInt(localStorage.getItem(\"correctAnswers\")) || 0;\n      if (answer.IsCorrect) {\n        // Update correct answer count only if correct\n        localStorage.setItem(\"correctAnswers\", currentCorrectAnswers + 1);\n      }\n    }\n  };\n  if (!answers) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"loading\"\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: style.questionsList,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: style.questionTitle,\n      children: question.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), answers.map(answer => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: question.id,\n        id: answer.id,\n        checked: selectedAnswer === answer.id,\n        onChange: () => handleAnswerSelect(answer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: answer.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TestForm, \"oK7VQP+hNyRc5i9IE58f/nJ5d0w=\");\n_c = TestForm;\nvar _c;\n$RefreshReg$(_c, \"TestForm\");","map":{"version":3,"names":["React","useEffect","useState","getAnswerByQuestionId","style","Fragment","_Fragment","jsxDEV","_jsxDEV","TestForm","question","_s","answers","setAnswers","selectedAnswer","setSelectedAnswer","id","then","data","handleAnswerSelect","answer","currentCorrectAnswers","parseInt","localStorage","getItem","IsCorrect","setItem","children","className","questionsList","questionTitle","Title","fileName","_jsxFileName","lineNumber","columnNumber","map","type","name","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/golov/coding/frelance/test-app-kursach/freelance-test-app-4/web/src/components/TestForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getAnswerByQuestionId } from \"../services/TestApi\";\r\nimport style from \"../styles/TestForm.module.css\";\r\n\r\nexport const TestForm = ({ question }) => {\r\n  const [answers, setAnswers] = useState();\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\r\n  useEffect(() => {\r\n    getAnswerByQuestionId(question.id).then((data) => setAnswers(data));\r\n  }, [question.id]);\r\n\r\n  const handleAnswerSelect = (answer) => {\r\n    if (!selectedAnswer) {\r\n      // Only update if no answer is selected yet\r\n      setSelectedAnswer(answer.id);\r\n      const currentCorrectAnswers =\r\n        parseInt(localStorage.getItem(\"correctAnswers\")) || 0;\r\n      if (answer.IsCorrect) {\r\n        // Update correct answer count only if correct\r\n        localStorage.setItem(\"correctAnswers\", currentCorrectAnswers + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (!answers) {\r\n    return <>loading</>;\r\n  }\r\n\r\n  return (\r\n    <ul className={style.questionsList}>\r\n      <p className={style.questionTitle}>{question.Title}</p>\r\n      {answers.map((answer) => (\r\n        <li>\r\n          <input\r\n            type=\"radio\"\r\n            name={question.id}\r\n            id={answer.id}\r\n            checked={selectedAnswer === answer.id}\r\n            onChange={() => handleAnswerSelect(answer)}\r\n          />\r\n          <span>{answer.Title}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,qBAAqB;AAC3D,OAAOC,KAAK,MAAM,+BAA+B;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACxC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1DD,SAAS,CAAC,MAAM;IACdE,qBAAqB,CAACO,QAAQ,CAACM,EAAE,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAKL,UAAU,CAACK,IAAI,CAAC,CAAC;EACrE,CAAC,EAAE,CAACR,QAAQ,CAACM,EAAE,CAAC,CAAC;EAEjB,MAAMG,kBAAkB,GAAIC,MAAM,IAAK;IACrC,IAAI,CAACN,cAAc,EAAE;MACnB;MACAC,iBAAiB,CAACK,MAAM,CAACJ,EAAE,CAAC;MAC5B,MAAMK,qBAAqB,GACzBC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC;MACvD,IAAIJ,MAAM,CAACK,SAAS,EAAE;QACpB;QACAF,YAAY,CAACG,OAAO,CAAC,gBAAgB,EAAEL,qBAAqB,GAAG,CAAC,CAAC;MACnE;IACF;EACF,CAAC;EAED,IAAI,CAACT,OAAO,EAAE;IACZ,oBAAOJ,OAAA,CAAAF,SAAA;MAAAqB,QAAA,EAAE;IAAO,gBAAE,CAAC;EACrB;EAEA,oBACEnB,OAAA;IAAIoB,SAAS,EAAExB,KAAK,CAACyB,aAAc;IAAAF,QAAA,gBACjCnB,OAAA;MAAGoB,SAAS,EAAExB,KAAK,CAAC0B,aAAc;MAAAH,QAAA,EAAEjB,QAAQ,CAACqB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtDvB,OAAO,CAACwB,GAAG,CAAEhB,MAAM,iBAClBZ,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QACE6B,IAAI,EAAC,OAAO;QACZC,IAAI,EAAE5B,QAAQ,CAACM,EAAG;QAClBA,EAAE,EAAEI,MAAM,CAACJ,EAAG;QACduB,OAAO,EAAEzB,cAAc,KAAKM,MAAM,CAACJ,EAAG;QACtCwB,QAAQ,EAAEA,CAAA,KAAMrB,kBAAkB,CAACC,MAAM;MAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACF3B,OAAA;QAAAmB,QAAA,EAAOP,MAAM,CAACW;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACxB,EAAA,CAzCWF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}