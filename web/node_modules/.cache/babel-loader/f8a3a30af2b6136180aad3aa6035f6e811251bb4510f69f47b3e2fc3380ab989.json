{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\golov\\\\coding\\\\frelance\\\\test-app-kursach\\\\freelance-test-app-2\\\\web\\\\src\\\\pages\\\\TestPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport style from \"../styles/TestPage.module.css\";\nimport { getQuestionsByTestId } from \"../services/TestApi\";\nimport { TestForm } from \"../components/TestForm\";\nimport { ExitTest } from \"../components/test-modals/ExitTest\";\nimport { CompletedTest } from \"../components/test-modals/CompletedTest\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TestPage = () => {\n  _s();\n  const location = useLocation();\n  const [questions, setQuestions] = useState();\n  const [exitTest, setExitTest] = useState(false);\n  const [completedTest, setCompletedTest] = useState(false);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const testId = location.state.data.testId;\n  useEffect(() => {\n    getQuestionsByTestId(testId).then(data => setQuestions(data));\n    let intervalId;\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setElapsedTime(prevTime => prevTime + 10); // Update every 10 milliseconds\n      }, 10);\n    }\n    return () => clearInterval(intervalId);\n  }, [testId]);\n  if (!questions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n  const CompleteTest = () => {\n    setCompletedTest(true);\n  };\n  const ExitTestModal = () => {\n    setExitTest(true);\n  };\n  const ExitTestHide = () => {\n    setExitTest(false);\n  };\n  const formatTime = timeInMillis => {\n    const seconds = Math.floor(timeInMillis / 1000 % 60);\n    const minutes = Math.floor(timeInMillis / (1000 * 60) % 60);\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    return `${formattedMinutes}:${formattedSeconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-corner\",\n      children: formatTime()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.questionsContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.questionsForm,\n        children: [questions.map(question => /*#__PURE__*/_jsxDEV(TestForm, {\n          question: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 38\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.buttonContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: ExitTestModal,\n            className: style.rejectBtn,\n            children: \"\\u0412\\u0438\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: CompleteTest,\n            className: style.accepBtn,\n            children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), exitTest && /*#__PURE__*/_jsxDEV(ExitTest, {\n      onHide: ExitTestHide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this), completedTest && /*#__PURE__*/_jsxDEV(CompletedTest, {\n      questions: questions,\n      testId: testId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(TestPage, \"CxVo6tBLeXmyjLPkmUOA2VHrOHI=\", false, function () {\n  return [useLocation];\n});\n_c = TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","style","getQuestionsByTestId","TestForm","ExitTest","CompletedTest","jsxDEV","_jsxDEV","Fragment","_Fragment","TestPage","_s","location","questions","setQuestions","exitTest","setExitTest","completedTest","setCompletedTest","elapsedTime","setElapsedTime","testId","state","data","then","intervalId","isRunning","setInterval","prevTime","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","CompleteTest","ExitTestModal","ExitTestHide","formatTime","timeInMillis","seconds","Math","floor","minutes","formattedSeconds","toString","padStart","formattedMinutes","className","questionsContainer","questionsForm","map","question","buttonContainer","onClick","rejectBtn","accepBtn","onHide","_c","$RefreshReg$"],"sources":["C:/Users/golov/coding/frelance/test-app-kursach/freelance-test-app-2/web/src/pages/TestPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport style from \"../styles/TestPage.module.css\";\r\nimport { getQuestionsByTestId } from \"../services/TestApi\";\r\nimport { TestForm } from \"../components/TestForm\";\r\nimport {ExitTest} from \"../components/test-modals/ExitTest\";\r\nimport {CompletedTest} from \"../components/test-modals/CompletedTest\";\r\n\r\nexport const TestPage = () => {\r\n  const location = useLocation();\r\n  const [questions, setQuestions] = useState();\r\n  const [exitTest, setExitTest] = useState(false);\r\n  const [completedTest, setCompletedTest] = useState(false);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const testId = location.state.data.testId;\r\n\r\n\r\n  useEffect(\r\n    () => {\r\n      getQuestionsByTestId(testId).then(data =>\r\n      setQuestions(data));\r\n      let intervalId;\r\n      if (isRunning) {\r\n        intervalId = setInterval(() => {\r\n          setElapsedTime((prevTime) => prevTime + 10); // Update every 10 milliseconds\r\n        }, 10);\r\n      }\r\n\r\n      return () => clearInterval(intervalId); \r\n    },\r\n    [testId]\r\n  );\r\n\r\n  if(!questions){\r\n    return (<div>\r\n        loading\r\n    </div>)\r\n  }\r\n\r\n  const CompleteTest = () =>{\r\n    setCompletedTest(true)\r\n  }\r\n\r\n  const ExitTestModal = () => {\r\n    setExitTest(true)\r\n  }\r\n\r\n  const ExitTestHide = () => {\r\n    setExitTest(false)\r\n  }\r\n\r\n  const formatTime = (timeInMillis) => {\r\n    const seconds = Math.floor((timeInMillis / 1000) % 60);\r\n    const minutes = Math.floor((timeInMillis / (1000 * 60)) % 60);\r\n\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n\r\n    return `${formattedMinutes}:${formattedSeconds}`;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"time-corner\">\r\n        {formatTime()}\r\n      </div>\r\n      <div className={style.questionsContainer}>\r\n        <div className={style.questionsForm}>\r\n          {questions.map(question => <TestForm question={question} />)}\r\n          <div className={style.buttonContainer}>\r\n            <button onClick={ExitTestModal} className={style.rejectBtn}>Вийти</button>\r\n            <button onClick={CompleteTest} className={style.accepBtn}>Завершити</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {exitTest && <ExitTest onHide={ExitTestHide}/>}\r\n    {completedTest && <CompletedTest questions={questions} testId={testId}/>}\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}