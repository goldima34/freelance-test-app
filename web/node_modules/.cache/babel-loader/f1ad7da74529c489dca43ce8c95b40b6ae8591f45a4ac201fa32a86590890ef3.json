{"ast":null,"code":"import $api from \"../services/index\";\nexport const getAllTests = async () => {\n  const {\n    data\n  } = await $api.get(\"/test/getAll\");\n  return data;\n};\nexport const getQuestionsByTestId = async TestId => {\n  const {\n    data\n  } = await $api.post(\"/question/findQuestions\", {\n    TestId\n  });\n  return data;\n};\nexport const getAnswerByQuestionId = async QuestionId => {\n  const {\n    data\n  } = await $api.post(\"/answer/get\", {\n    QuestionId\n  });\n  return data;\n};\nexport const createUserTest = async (UserId, TestId, Time, QuestionCount, CorrectAnswerCount) => {\n  const {\n    data\n  } = await $api.post(\"/userTest/create\", {\n    UserId,\n    TestId,\n    Time,\n    QuestionCount,\n    CorrectAnswerCount\n  });\n  return data;\n};\nexport const getUserTest = async () => {\n  const {\n    data\n  } = await $api.get(\"/userTest/get\");\n  return data;\n};\nexport const getTestName = async id => {\n  const {\n    data\n  } = await $api.get(\"/test/get\", {\n    params: {\n      id\n    }\n  });\n  return data;\n};\nexport const createTest = async (testTitle, questions, UserId) => {\n  //console.log(questions)\n\n  // const test = await $api.post(\"/test/create\", { UserId, Title: testTitle }) // робимо тест\n  // const TestId = test.data.id\n  // const Title = test.data.Title\n\n  for (const element of questions) {\n    // let Title = element.question\n    // const question = await $api.post(\"/question/create\", { TestId, Title }) // робимо питання \n    // const QuestionId = question.data.id\n    // console.log(element)\n    // let answers = questions.answers\n    // const newAnswers = questions.answers.filter((answers, index) => index !== questions.correctAnswerIndex);\n    // console.log(newAnswers)\n    // const colors = questions.answers;\n    // const newColors = colors.filter((color, index) => index !== 1); // Remove element at index 1\n    console.log(questions.answers[0]);\n    // for(const answers of element){\n    //   console.log(answers)\n    // }\n\n    //const answer = await $api.post(\"/answer/create\", { QuestionId, Title }) // робимо коректні відповіді\n    //element.answers[element.correctAnswerIndex]\n    // .map((answer) => console.log(answer))\n  }\n\n  // const { data } = await $api.post(\"/test/create\", { UserId, });\n  // return data;\n};","map":{"version":3,"names":["$api","getAllTests","data","get","getQuestionsByTestId","TestId","post","getAnswerByQuestionId","QuestionId","createUserTest","UserId","Time","QuestionCount","CorrectAnswerCount","getUserTest","getTestName","id","params","createTest","testTitle","questions","element","console","log","answers"],"sources":["C:/Users/golov/coding/frelance/freelance-test-app/web/src/services/TestApi.js"],"sourcesContent":["import $api from \"../services/index\";\r\n\r\nexport const getAllTests = async () => {\r\n  const { data } = await $api.get(\"/test/getAll\");\r\n  return data;\r\n};\r\n\r\nexport const getQuestionsByTestId = async TestId => {\r\n  const { data } = await $api.post(\"/question/findQuestions\", { TestId });\r\n  return data;\r\n};\r\n\r\nexport const getAnswerByQuestionId = async QuestionId => {\r\n  const { data } = await $api.post(\"/answer/get\", { QuestionId });\r\n  return data;\r\n};\r\n\r\nexport const createUserTest = async (UserId, TestId, Time, QuestionCount, CorrectAnswerCount) => {\r\n  const { data } = await $api.post(\"/userTest/create\", { UserId, TestId, Time, QuestionCount, CorrectAnswerCount });\r\n  return data;\r\n}\r\n\r\nexport const getUserTest = async () => {\r\n  const { data } = await $api.get(\"/userTest/get\");\r\n  return data;\r\n}\r\n\r\nexport const getTestName = async (id) => {\r\n  const { data } = await $api.get(\"/test/get\", { params: { id } });\r\n  return data;\r\n}\r\n\r\nexport const createTest = async (testTitle, questions, UserId) => {\r\n  //console.log(questions)\r\n\r\n  // const test = await $api.post(\"/test/create\", { UserId, Title: testTitle }) // робимо тест\r\n  // const TestId = test.data.id\r\n  // const Title = test.data.Title\r\n\r\n  for (const element of questions) {\r\n    // let Title = element.question\r\n    // const question = await $api.post(\"/question/create\", { TestId, Title }) // робимо питання \r\n    // const QuestionId = question.data.id\r\n    // console.log(element)\r\n    // let answers = questions.answers\r\n    // const newAnswers = questions.answers.filter((answers, index) => index !== questions.correctAnswerIndex);\r\n    // console.log(newAnswers)\r\n    // const colors = questions.answers;\r\n    // const newColors = colors.filter((color, index) => index !== 1); // Remove element at index 1\r\n    console.log(questions.answers[0]);\r\n    // for(const answers of element){\r\n    //   console.log(answers)\r\n    // }\r\n\r\n    //const answer = await $api.post(\"/answer/create\", { QuestionId, Title }) // робимо коректні відповіді\r\n    //element.answers[element.correctAnswerIndex]\r\n    // .map((answer) => console.log(answer))\r\n  }\r\n\r\n  // const { data } = await $api.post(\"/test/create\", { UserId, });\r\n  // return data;\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,mBAAmB;AAEpC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,cAAc,CAAC;EAC/C,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAMC,MAAM,IAAI;EAClD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,yBAAyB,EAAE;IAAED;EAAO,CAAC,CAAC;EACvE,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAG,MAAMC,UAAU,IAAI;EACvD,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,aAAa,EAAE;IAAEE;EAAW,CAAC,CAAC;EAC/D,OAAON,IAAI;AACb,CAAC;AAED,OAAO,MAAMO,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEL,MAAM,EAAEM,IAAI,EAAEC,aAAa,EAAEC,kBAAkB,KAAK;EAC/F,MAAM;IAAEX;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,kBAAkB,EAAE;IAAEI,MAAM;IAAEL,MAAM;IAAEM,IAAI;IAAEC,aAAa;IAAEC;EAAmB,CAAC,CAAC;EACjH,OAAOX,IAAI;AACb,CAAC;AAED,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAAEZ;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,eAAe,CAAC;EAChD,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,MAAM;IAAEd;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,WAAW,EAAE;IAAEc,MAAM,EAAE;MAAED;IAAG;EAAE,CAAC,CAAC;EAChE,OAAOd,IAAI;AACb,CAAC;AAED,OAAO,MAAMgB,UAAU,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,EAAEV,MAAM,KAAK;EAChE;;EAEA;EACA;EACA;;EAEA,KAAK,MAAMW,OAAO,IAAID,SAAS,EAAE;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAE,OAAO,CAACC,GAAG,CAACH,SAAS,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;IACjC;IACA;IACA;;IAEA;IACA;IACA;EACF;;EAEA;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}