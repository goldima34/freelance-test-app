{"ast":null,"code":"import $api from \"../services/index\";\nexport const getAllTests = async () => {\n  const {\n    data\n  } = await $api.get(\"/test/getAll\");\n  return data;\n};\nexport const getQuestionsByTestId = async TestId => {\n  const {\n    data\n  } = await $api.post(\"/question/findQuestions\", {\n    TestId\n  });\n  return data;\n};\nexport const getAnswerByQuestionId = async QuestionId => {\n  const {\n    data\n  } = await $api.post(\"/answer/get\", {\n    QuestionId\n  });\n  return data;\n};\nexport const createUserTest = async (UserId, TestId, Time, QuestionCount, CorrectAnswerCount) => {\n  const {\n    data\n  } = await $api.post(\"/userTest/create\", {\n    UserId,\n    TestId,\n    Time,\n    QuestionCount,\n    CorrectAnswerCount\n  });\n  return data;\n};\nexport const getUserTest = async () => {\n  const {\n    data\n  } = await $api.get(\"/userTest/get\");\n  return data;\n};\nexport const getTestName = async id => {\n  const {\n    data\n  } = await $api.get(\"/test/get\", {\n    params: {\n      id\n    }\n  });\n  return data;\n};\nexport const createTest = async (testTitle, questions, UserId) => {\n  const test = await $api.post(\"/test/create\", {\n    UserId,\n    Title: testTitle\n  }); // робимо тест\n  const TestId = test.data.id;\n  const Title = test.data.Title;\n  for (const element of questions) {\n    let Title = element.question;\n    const question = await $api.post(\"/question/create\", {\n      TestId,\n      Title\n    }); // робимо питання \n    const QuestionId = question.data.id;\n    const answer = await $api.post(\"/answer/create\", {\n      QuestionId,\n      Title: element.answers[element.correctAnswerIndex],\n      IsCorrect: true\n    }); // робимо коректні відповіді\n\n    let answers = element.answers;\n    const newAnswers = element.answers.filter((answers, index) => index !== element.correctAnswerIndex);\n    for (const answers of newAnswers) {\n      $api.post(\"/answer/create\", {\n        QuestionId,\n        Title: answers,\n        IsCorrect: false\n      }); // робимо не коректні відповіді\n    }\n  }\n};","map":{"version":3,"names":["$api","getAllTests","data","get","getQuestionsByTestId","TestId","post","getAnswerByQuestionId","QuestionId","createUserTest","UserId","Time","QuestionCount","CorrectAnswerCount","getUserTest","getTestName","id","params","createTest","testTitle","questions","test","Title","element","question","answer","answers","correctAnswerIndex","IsCorrect","newAnswers","filter","index"],"sources":["C:/Users/golov/coding/frelance/freelance-test-app/web/src/services/TestApi.js"],"sourcesContent":["import $api from \"../services/index\";\r\n\r\nexport const getAllTests = async () => {\r\n  const { data } = await $api.get(\"/test/getAll\");\r\n  return data;\r\n};\r\n\r\nexport const getQuestionsByTestId = async TestId => {\r\n  const { data } = await $api.post(\"/question/findQuestions\", { TestId });\r\n  return data;\r\n};\r\n\r\nexport const getAnswerByQuestionId = async QuestionId => {\r\n  const { data } = await $api.post(\"/answer/get\", { QuestionId });\r\n  return data;\r\n};\r\n\r\nexport const createUserTest = async (UserId, TestId, Time, QuestionCount, CorrectAnswerCount) => {\r\n  const { data } = await $api.post(\"/userTest/create\", { UserId, TestId, Time, QuestionCount, CorrectAnswerCount });\r\n  return data;\r\n}\r\n\r\nexport const getUserTest = async () => {\r\n  const { data } = await $api.get(\"/userTest/get\");\r\n  return data;\r\n}\r\n\r\nexport const getTestName = async (id) => {\r\n  const { data } = await $api.get(\"/test/get\", { params: { id } });\r\n  return data;\r\n}\r\n\r\nexport const createTest = async (testTitle, questions, UserId) => {\r\n\r\n  const test = await $api.post(\"/test/create\", { UserId, Title: testTitle }) // робимо тест\r\n  const TestId = test.data.id\r\n  const Title = test.data.Title\r\n\r\n  for (const element of questions) {\r\n    let Title = element.question\r\n    const question = await $api.post(\"/question/create\", { TestId, Title }) // робимо питання \r\n    const QuestionId = question.data.id\r\n\r\n    const answer = await $api.post(\"/answer/create\", { QuestionId, Title: element.answers[element.correctAnswerIndex], IsCorrect:true }) // робимо коректні відповіді\r\n\r\n    let answers = element.answers\r\n    const newAnswers = element.answers.filter((answers, index) => index !== element.correctAnswerIndex);\r\n    for(const answers of newAnswers){\r\n      $api.post(\"/answer/create\", { QuestionId, Title: answers, IsCorrect:false }) // робимо не коректні відповіді\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,mBAAmB;AAEpC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,cAAc,CAAC;EAC/C,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAG,MAAMC,MAAM,IAAI;EAClD,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,yBAAyB,EAAE;IAAED;EAAO,CAAC,CAAC;EACvE,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAG,MAAMC,UAAU,IAAI;EACvD,MAAM;IAAEN;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,aAAa,EAAE;IAAEE;EAAW,CAAC,CAAC;EAC/D,OAAON,IAAI;AACb,CAAC;AAED,OAAO,MAAMO,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEL,MAAM,EAAEM,IAAI,EAAEC,aAAa,EAAEC,kBAAkB,KAAK;EAC/F,MAAM;IAAEX;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACM,IAAI,CAAC,kBAAkB,EAAE;IAAEI,MAAM;IAAEL,MAAM;IAAEM,IAAI;IAAEC,aAAa;IAAEC;EAAmB,CAAC,CAAC;EACjH,OAAOX,IAAI;AACb,CAAC;AAED,OAAO,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAM;IAAEZ;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,eAAe,CAAC;EAChD,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMa,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,MAAM;IAAEd;EAAK,CAAC,GAAG,MAAMF,IAAI,CAACG,GAAG,CAAC,WAAW,EAAE;IAAEc,MAAM,EAAE;MAAED;IAAG;EAAE,CAAC,CAAC;EAChE,OAAOd,IAAI;AACb,CAAC;AAED,OAAO,MAAMgB,UAAU,GAAG,MAAAA,CAAOC,SAAS,EAAEC,SAAS,EAAEV,MAAM,KAAK;EAEhE,MAAMW,IAAI,GAAG,MAAMrB,IAAI,CAACM,IAAI,CAAC,cAAc,EAAE;IAAEI,MAAM;IAAEY,KAAK,EAAEH;EAAU,CAAC,CAAC,EAAC;EAC3E,MAAMd,MAAM,GAAGgB,IAAI,CAACnB,IAAI,CAACc,EAAE;EAC3B,MAAMM,KAAK,GAAGD,IAAI,CAACnB,IAAI,CAACoB,KAAK;EAE7B,KAAK,MAAMC,OAAO,IAAIH,SAAS,EAAE;IAC/B,IAAIE,KAAK,GAAGC,OAAO,CAACC,QAAQ;IAC5B,MAAMA,QAAQ,GAAG,MAAMxB,IAAI,CAACM,IAAI,CAAC,kBAAkB,EAAE;MAAED,MAAM;MAAEiB;IAAM,CAAC,CAAC,EAAC;IACxE,MAAMd,UAAU,GAAGgB,QAAQ,CAACtB,IAAI,CAACc,EAAE;IAEnC,MAAMS,MAAM,GAAG,MAAMzB,IAAI,CAACM,IAAI,CAAC,gBAAgB,EAAE;MAAEE,UAAU;MAAEc,KAAK,EAAEC,OAAO,CAACG,OAAO,CAACH,OAAO,CAACI,kBAAkB,CAAC;MAAEC,SAAS,EAAC;IAAK,CAAC,CAAC,EAAC;;IAErI,IAAIF,OAAO,GAAGH,OAAO,CAACG,OAAO;IAC7B,MAAMG,UAAU,GAAGN,OAAO,CAACG,OAAO,CAACI,MAAM,CAAC,CAACJ,OAAO,EAAEK,KAAK,KAAKA,KAAK,KAAKR,OAAO,CAACI,kBAAkB,CAAC;IACnG,KAAI,MAAMD,OAAO,IAAIG,UAAU,EAAC;MAC9B7B,IAAI,CAACM,IAAI,CAAC,gBAAgB,EAAE;QAAEE,UAAU;QAAEc,KAAK,EAAEI,OAAO;QAAEE,SAAS,EAAC;MAAM,CAAC,CAAC,EAAC;IAC/E;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}